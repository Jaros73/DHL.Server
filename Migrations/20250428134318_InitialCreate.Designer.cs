// <auto-generated />
using System;
using DHL.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DHL.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428134318_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DHL.Server.Models.DTO.Crate", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Value");

                    b.ToTable("Crates");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.LocationMachine", b =>
                {
                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MachineValue")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LocationId", "MachineValue");

                    b.HasIndex("MachineValue");

                    b.ToTable("LocationMachines");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.Machine", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Value");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.Machining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFor")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Machinings");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.MachiningMachine", b =>
                {
                    b.Property<int>("MachiningId")
                        .HasColumnType("int");

                    b.Property<string>("MachineValue")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachiningId", "MachineValue");

                    b.HasIndex("MachineValue");

                    b.ToTable("MachiningMachines");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.TechnologicalGroup", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Value");

                    b.ToTable("TechnologicalGroups");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.TechnologicalGroupCrate", b =>
                {
                    b.Property<string>("TechnologicalGroupValue")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CrateValue")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TechnologicalGroupValue", "CrateValue");

                    b.HasIndex("CrateValue");

                    b.ToTable("TechnologicalGroupCrates");
                });

            modelBuilder.Entity("DHL.Server.Models.Entities.DispatchKeyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DispatchKeys");
                });

            modelBuilder.Entity("DHL.Server.Models.Entities.DispatchModelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedByFullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("KeyEnumId")
                        .HasColumnType("int");

                    b.Property<string>("KeyEnumName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TypeEnumId")
                        .HasColumnType("int");

                    b.Property<string>("TypeEnumName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UserTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("DHL.Server.Models.Entities.DispatchTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DispatchTypes");
                });

            modelBuilder.Entity("DHL.Server.Models.Entities.LocationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOfficeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Psc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.LocationMachine", b =>
                {
                    b.HasOne("DHL.Server.Models.Entities.LocationEntity", null)
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DHL.Server.Models.DTO.Machine", null)
                        .WithMany()
                        .HasForeignKey("MachineValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.MachiningMachine", b =>
                {
                    b.HasOne("DHL.Server.Models.DTO.Machine", null)
                        .WithMany()
                        .HasForeignKey("MachineValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DHL.Server.Models.DTO.Machining", null)
                        .WithMany()
                        .HasForeignKey("MachiningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DHL.Server.Models.DTO.TechnologicalGroupCrate", b =>
                {
                    b.HasOne("DHL.Server.Models.DTO.Crate", null)
                        .WithMany()
                        .HasForeignKey("CrateValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DHL.Server.Models.DTO.TechnologicalGroup", null)
                        .WithMany()
                        .HasForeignKey("TechnologicalGroupValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
