
@using DHL.Server.Features.Ciselniky.Models
@using DHL.Server.Features.Ciselniky.Interfaces
@inject IZpozdeniKurzuService ZpozdeniService
@using MudBlazor

<MudDialog>
    <DialogContent>
        <MudTextField Label="Důvod zpoždění"
                      @bind-Value="_model.Duvod"
                      Required="true"
                      Class="mt-2" />

        @if (_initialized)
        {
            <div class="mt-4 d-flex align-items-center gap-2">
                <input type="checkbox"
                       role="switch"
                       class="form-check-input"
                       checked="@_model.IsActive"
                       @onchange="OnCheckboxChanged" />
                <label class="form-check-label">@(_model.IsActive ? "Aktivní" : "Neaktivní")</label>
            </div>
        }

        @if (_model.Id != 0)
        {
            <MudText Typo="Typo.caption" Class="mt-3 text-secondary">
                Založeno: @_model.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm") | Autor: @_model.CreatedBy
            </MudText>
        }
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Secondary" Variant="Variant.Text">Zrušit</MudButton>
        <MudButton OnClick="Save" Color="Color.Primary">Uložit</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public ZpozdeniKurzuDto Model { get; set; } = new();

    private ZpozdeniKurzuDto _model = new();
    private bool _initialized = false;

    protected override void OnInitialized()
    {
        _model = new ZpozdeniKurzuDto
            {
                Id = Model.Id,
                Duvod = Model.Duvod,
                IsActive = Model.IsActive,
                CreatedAt = Model.Id == 0 || Model.CreatedAt == default ? DateTime.UtcNow : Model.CreatedAt,
                CreatedBy = string.IsNullOrWhiteSpace(Model.CreatedBy) ? "system" : Model.CreatedBy
            };
        _initialized = true;
    }

    private void Save()
    {
        MudDialog.Close(DialogResult.Ok(_model));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void OnCheckboxChanged(ChangeEventArgs e)
    {
        if (bool.TryParse(e.Value?.ToString(), out var parsed))
        {
            _model.IsActive = parsed;
        }
        else
        {
            _model.IsActive = e.Value?.ToString()?.ToLower() == "on";
        }
    }
}
